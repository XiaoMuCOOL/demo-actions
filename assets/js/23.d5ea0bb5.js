(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{388:function(a,t,r){"use strict";r.r(t);var e=r(1),s=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("Portainer 基本介绍。")]),a._v(" "),t("h2",{attrs:{id:"简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[a._v("#")]),a._v(" 简介")]),a._v(" "),t("h3",{attrs:{id:"安装-portainer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-portainer"}},[a._v("#")]),a._v(" 安装 - Portainer")]),a._v(" "),t("div",{staticClass:"language-cmd extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("# 初始化 swarm 集群  \ndocker swarm init --advertise-addr [IP地址] \n\n# 创建 portainer 挂载目录\nmkdir -p /home/portainer\n\n# 以 swarm service 建立 portainer 管理 \ndocker service create \\\n--name portainer \\\n--publish 9000:9000 \\\n--replicas=1 \\\n--constraint 'node.role == manager' \\\n--mount type=bind,src=//var/run/docker.sock,dst=/var/run/docker.sock \\\n--mount type=bind,src=//home/portainer,dst=/data \\\nportainer/portainer-ce \\\n-H unix:///var/run/docker.sock\n")])])]),t("h2",{attrs:{id:"常用功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用功能"}},[a._v("#")]),a._v(" 常用功能")]),a._v(" "),t("h3",{attrs:{id:"添加其他服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加其他服务器"}},[a._v("#")]),a._v(" 添加其他服务器")]),a._v(" "),t("p",[a._v("操作路径：")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("Environments -> add environment -> Agent -> Docker Swarm")])])]),a._v(" "),t("p",[a._v("然后在服务器运行：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 初始化Swarm集群")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" swarm init --advertise-addr "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("IP地址"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network create "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--driver")]),a._v(" overlay "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  portainer_agent_network\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" create "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" portainer_agent "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--network")]),a._v(" portainer_agent_network "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9001")]),a._v(":9001/tcp "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--mode")]),a._v(" global "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--constraint")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'node.platform.os == linux'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--mount")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("type")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("bind,src"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("//var/run/docker.sock,dst"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/var/run/docker.sock "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--mount")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("type")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("bind,src"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("//var/lib/docker/volumes,dst"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/var/lib/docker/volumes "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  portainer/agent:2.13.0\n")])])]),t("p",[a._v("成功后填入：")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("Name：随便")]),a._v(" "),t("li",[a._v("Environment URL：[IP地址]:9001")]),a._v(" "),t("li",[a._v("Public IP ：[IP地址]")])])]),a._v(" "),t("p",[a._v("然后点击 "),t("code",[a._v("+ Add environment")]),a._v(" 按钮就添加成功了。")]),a._v(" "),t("p",[a._v("可能会遇到"),t("code",[a._v("rpc error: code = Unknown desc = warning: incomplete log stream.")]),a._v("问题，是因为swarm证书到期了。")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" swarm update --cert-expiry 867240h0m0s\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" swarm ca "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--rotate")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" openssl x509 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-text")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-noout")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看 docker 信息")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" system info\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);