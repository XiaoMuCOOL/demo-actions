(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{382:function(t,a,n){"use strict";n.r(a);var r=n(1),s=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Portainer 基本介绍。")]),t._v(" "),a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),a("h3",{attrs:{id:"安装-portainer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-portainer"}},[t._v("#")]),t._v(" 安装 - Portainer")]),t._v(" "),a("div",{staticClass:"language-cmd extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 初始化 swarm 集群  \ndocker swarm init --advertise-addr [IP地址] \n\n# 创建 portainer 挂载目录\nmkdir -p /home/portainer\n\n# 以 swarm service 建立 portainer 管理 \ndocker service create \\\n--name portainer \\\n--publish 9000:9000 \\\n--replicas=1 \\\n--constraint 'node.role == manager' \\\n--mount type=bind,src=//var/run/docker.sock,dst=/var/run/docker.sock \\\n--mount type=bind,src=//home/portainer,dst=/data \\\nportainer/portainer-ce \\\n-H unix:///var/run/docker.sock\n")])])]),a("h2",{attrs:{id:"常用功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用功能"}},[t._v("#")]),t._v(" 常用功能")]),t._v(" "),a("h3",{attrs:{id:"添加其他服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加其他服务器"}},[t._v("#")]),t._v(" 添加其他服务器")]),t._v(" "),a("p",[t._v("操作路径：")]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("Environments -> add environment -> Agent -> Docker Swarm")])])]),t._v(" "),a("p",[t._v("然后在服务器运行：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化Swarm集群")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" swarm init --advertise-addr "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("IP地址"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" network create "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --driver overlay "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  portainer_agent_network\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" create "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --name portainer_agent "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --network portainer_agent_network "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9001")]),t._v(":9001/tcp "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --mode global "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --constraint "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'node.platform.os == linux'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --mount "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("bind,src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("//var/run/docker.sock,dst"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/run/docker.sock "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --mount "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("bind,src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("//var/lib/docker/volumes,dst"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/lib/docker/volumes "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  portainer/agent:2.13.0\n")])])]),a("p",[t._v("成功后填入：")]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("Name：随便")]),t._v(" "),a("li",[t._v("Environment URL：[IP地址]:9001")]),t._v(" "),a("li",[t._v("Public IP ：[IP地址]")])])]),t._v(" "),a("p",[t._v("然后点击 "),a("code",[t._v("+ Add environment")]),t._v(" 按钮就添加成功了。")])])}),[],!1,null,null,null);a.default=s.exports}}]);