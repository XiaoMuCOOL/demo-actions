(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{254:function(t,s,a){"use strict";a.r(s);var e=a(1),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("5iuse-admin项目工作流程介绍。")]),t._v(" "),a("h2",{attrs:{id:"后端流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后端流程"}},[t._v("#")]),t._v(" 后端流程")]),t._v(" "),a("p",[t._v("后端默认在"),a("code",[t._v("dev")]),t._v("分支开发。")]),t._v(" "),a("p",[t._v("当要发版时合并到"),a("code",[t._v("master")]),t._v("分支：")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到master分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合并dev分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge dev")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果有冲突请解决冲突后提交")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add .")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'解决冲突'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push origin master")]),t._v("\n")])])]),a("p",[t._v("在"),a("code",[t._v("master")]),t._v("分支提交是会触发"),a("code",[t._v("github actions")]),t._v("自动构建，所以务必保证"),a("code",[t._v("master")]),t._v("分支上的代码是可运行的！")]),t._v(" "),a("p",[t._v("最正规的做法是写好测试用例，然后在"),a("code",[t._v("Dockerfile")]),t._v("里如果不通过就不会构建。")]),t._v(" "),a("h2",{attrs:{id:"前端流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端流程"}},[t._v("#")]),t._v(" 前端流程")]),t._v(" "),a("p",[t._v("前端默认在"),a("code",[t._v("frontend-dev")]),t._v("分支下开发，但是要先合并"),a("code",[t._v("master")]),t._v("分支下的"),a("code",[t._v("/5iuse-ui")]),t._v("文件夹。")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在master分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 先新建一个临时分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" temp")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 只检出5iuse-ui文件夹")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master /5iuse-ui")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到frontend-dev分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout frontend-dev")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合并temp分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge temp")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果有冲突请解决冲突后提交")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add .")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'解决冲突'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push origin frontend-dev")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除temp分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -D")]),t._v(" temp")]),t._v("\n")])])]),a("p",[a("strong",[t._v("这样子"),a("code",[t._v("master")]),t._v("分支和"),a("code",[t._v("frontend-dev")]),t._v("分支上更新"),a("code",[t._v("5iuse-ui")]),t._v("的内容都能保留，不会被覆盖。")])]),t._v(" "),a("p",[t._v("当要发版时合并到"),a("code",[t._v("frontend")]),t._v("分支：")]),t._v(" "),a("div",{staticClass:"language-git extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切换到frontend分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout frontend")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 合并frontend-dev分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge frontend-dev")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果有冲突请解决冲突后提交")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add .")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'解决冲突'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push origin frontend")]),t._v("\n")])])]),a("p",[t._v("同样可以自动触发前端构建，自动更新。")])])}),[],!1,null,null,null);s.default=n.exports}}]);